name: One App Development Image Build
on:
  repository_dispatch:
    types: [one-app-docker-dev-build]
jobs:
  one-app-docker-dev-build:
    name: One App Development Image Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build development docker image
        run: docker build -t dev . --target=development
      - name: Tag Docker Images
        run: |
          docker tag dev ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.major_version }}
          docker tag dev ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.major_version}}.${{ github.event.client_payload.minor_version }}
          docker tag dev ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.docker_tag_version }}
          docker tag dev ${{ secrets.DOCKER_USER }}/one-app-dev:latest
      - name: Push Docker Images
        run: |
          docker push ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.major_version}}
          docker push ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.major_version}}.${{ github.event.client_payload.minor_version }}
          docker push ${{ secrets.DOCKER_USER }}/one-app-dev:${{ github.event.client_payload.docker_tag_version}}
          docker push ${{ secrets.DOCKER_USER }}/one-app-dev:latest
      - name: Trigger Image Publishing
        uses: octokit/request-action@v2.x
        id: dispatch_publish_statics_npm
        with:
          route: POST /repos/:repository/dispatches
          repository: ${{ github.repository }}
          mediaType: '{"previews": ["everest"]}'
          event_type: "publish-statics-npm"
          client_payload: '{"docker_tag_version": "${{ github.event.client_payload.docker_tag_version }}"}'
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}
